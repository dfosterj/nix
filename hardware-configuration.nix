# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ ];

  boot.initrd.availableKernelModules = [ "uhci_hcd" "xhci_pci" "ehci_pci" "ata_piix" "ahci" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/01606624-e650-4457-8183-d02c0aa2d700";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-e40c7275-1b62-4feb-b65d-4a2db5cee842".device = "/dev/disk/by-uuid/e40c7275-1b62-4feb-b65d-4a2db5cee842";

  swapDevices =
    [ { device = "/dev/disk/by-uuid/a118a45a-1a32-4802-9ae4-dcb7ebccf43a"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s5.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.parallels.enable = true;
  nixpkgs.config.allowUnfreePredicate = pkg: builtins.elem (lib.getName pkg) [ "prl-tools" ];
# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

  # Bootloader.
  boot.loader.grub.enable = true;
  boot.loader.grub.device = "/dev/sda";
  boot.loader.grub.useOSProber = true;

  boot.initrd.luks.devices."luks-7bb4e667-8b96-4c64-b96e-66462dd7d705".device = "/dev/disk/by-uuid/7bb4e667-8b96-4c64-b96e-66462dd7d705";
  # Setup keyfile
  boot.initrd.secrets = {
    "/boot/crypto_keyfile.bin" = null;
  };

  boot.loader.grub.enableCryptodisk = true;

  boot.initrd.luks.devices."luks-e40c7275-1b62-4feb-b65d-4a2db5cee842".keyFile = "/boot/crypto_keyfile.bin";
  boot.initrd.luks.devices."luks-7bb4e667-8b96-4c64-b96e-66462dd7d705".keyFile = "/boot/crypto_keyfile.bin";

}
